<?php


global $google_fonts;

$google_fonts = array(
	array('label' => 'use theme default','value' => 'none'),
	array('label' => 'Abel','value' => 'Abel'),
	array('label' => 'Abril Fatface','value' => 'Abril+Fatface'),
	array('label' => 'Aclonica','value' => 'Aclonica'),
	array('label' => 'Actor','value' => 'Actor'),
	array('label' => 'Adamina','value' => 'Adamina'),
	array('label' => 'Aguafina Script','value' => 'Aguafina+Script'),
	array('label' => 'Aladin','value' => 'Aladin'),
	array('label' => 'Aldrich','value' => 'Aldrich'),
	array('label' => 'Alice','value' => 'Alice'),
	array('label' => 'Alike Angular','value' => 'Alike+Angular'),
	array('label' => 'Alike','value' => 'Alike'),
	array('label' => 'Allan','value' => 'Allan'),
	array('label' => 'Allerta Stencil','value' => 'Allerta+Stencil'),
	array('label' => 'Allerta','value' => 'Allerta'),
	array('label' => 'Amaranth','value' => 'Amaranth'),
	array('label' => 'Amatic SC','value' => 'Amatic+SC'),
	array('label' => 'Andada','value' => 'Andada'),
	array('label' => 'Andika','value' => 'Andika'),
	array('label' => 'Annie Use Your Telescope','value' => 'Annie+Use+Your+Telescope'),
	array('label' => 'Anonymous Pro','value' => 'Anonymous+Pro'),
	array('label' => 'Antic','value' => 'Antic'),
	array('label' => 'Anton','value' => 'Anton'),
	array('label' => 'Arapey','value' => 'Arapey'),
	array('label' => 'Architects Daughter','value' => 'Architects+Daughter'),
	array('label' => 'Arimo','value' => 'Arimo'),
	array('label' => 'Artifika','value' => 'Artifika'),
	array('label' => 'Arvo','value' => 'Arvo'),
	array('label' => 'Asset','value' => 'Asset'),
	array('label' => 'Astloch','value' => 'Astloch'),
	array('label' => 'Atomic Age','value' => 'Atomic+Age'),
	array('label' => 'Aubrey','value' => 'Aubrey'),
	array('label' => 'Bangers','value' => 'Bangers'),
	array('label' => 'Bentham','value' => 'Bentham'),
	array('label' => 'Bevan','value' => 'Bevan'),
	array('label' => 'Bigshot One','value' => 'Bigshot+One'),
	array('label' => 'Bitter','value' => 'Bitter'),
	array('label' => 'Black Ops One','value' => 'Black+Ops+One'),
	array('label' => 'Bowlby One SC','value' => 'Bowlby+One+SC'),
	array('label' => 'Bowlby One','value' => 'Bowlby+One'),
	array('label' => 'Brawler','value' => 'Brawler'),
	array('label' => 'Bubblegum Sans','value' => 'Bubblegum+Sans'),
	array('label' => 'Buda','value' => 'Buda'),
	array('label' => 'Butcherman Caps','value' => 'Butcherman+Caps'),
	array('label' => 'Cabin Condensed','value' => 'Cabin+Condensed'),
	array('label' => 'Cabin Sketch','value' => 'Cabin+Sketch'),
	array('label' => 'Cabin','value' => 'Cabin'),
	array('label' => 'Cagliostro','value' => 'Cagliostro'),
	array('label' => 'Calligraffitti','value' => 'Calligraffitti'),
	array('label' => 'Candal','value' => 'Candal'),
	array('label' => 'Cantarell','value' => 'Cantarell'),
	array('label' => 'Cardo','value' => 'Cardo'),
	array('label' => 'Carme','value' => 'Carme'),
	array('label' => 'Carter One','value' => 'Carter+One'),
	array('label' => 'Caudex','value' => 'Caudex'),
	array('label' => 'Cedarville Cursive','value' => 'Cedarville+Cursive'),
	array('label' => 'Changa One','value' => 'Changa+One'),
	array('label' => 'Cherry Cream Soda','value' => 'Cherry+Cream+Soda'),
	array('label' => 'Chewy','value' => 'Chewy'),
	array('label' => 'Chicle','value' => 'Chicle'),
	array('label' => 'Chivo','value' => 'Chivo'),
	array('label' => 'Coda Caption','value' => 'Coda+Caption'),
	array('label' => 'Coda','value' => 'Coda'),
	array('label' => 'Comfortaa','value' => 'Comfortaa'),
	array('label' => 'Coming Soon','value' => 'Coming+Soon'),
	array('label' => 'Contrail One','value' => 'Contrail+One'),
	array('label' => 'Convergence','value' => 'Convergence'),
	array('label' => 'Cookie','value' => 'Cookie'),
	array('label' => 'Copse','value' => 'Copse'),
	array('label' => 'Corben','value' => 'Corben'),
	array('label' => 'Cousine','value' => 'Cousine'),
	array('label' => 'Coustard','value' => 'Coustard'),
	array('label' => 'Covered By Your Grace','value' => 'Covered+By+Your+Grace'),
	array('label' => 'Crafty Girls','value' => 'Crafty+Girls'),
	array('label' => 'Creepster Caps','value' => 'Creepster+Caps'),
	array('label' => 'Crimson Text','value' => 'Crimson+Text'),
	array('label' => 'Crushed','value' => 'Crushed'),
	array('label' => 'Cuprum','value' => 'Cuprum'),
	array('label' => 'Damion','value' => 'Damion'),
	array('label' => 'Dancing Script','value' => 'Dancing+Script'),
	array('label' => 'Dawning of a New Day','value' => 'Dawning+of+a+New+Day'),
	array('label' => 'Days One','value' => 'Days+One'),
	array('label' => 'Delius Swash Caps','value' => 'Delius+Swash+Caps'),
	array('label' => 'Delius Unicase','value' => 'Delius+Unicase'),
	array('label' => 'Delius','value' => 'Delius'),
	array('label' => 'Devonshire','value' => 'Devonshire'),
	array('label' => 'Didact Gothic','value' => 'Didact+Gothic'),
	array('label' => 'Dorsa','value' => 'Dorsa'),
	array('label' => 'Dr Sugiyama','value' => 'Dr+Sugiyama'),
	array('label' => 'Droid Sans Mono','value' => 'Droid+Sans+Mono'),
	array('label' => 'Droid Sans','value' => 'Droid+Sans'),
	array('label' => 'Droid Serif','value' => 'Droid+Serif'),
	array('label' => 'EB Garamond','value' => 'EB+Garamond'),
	array('label' => 'Eater Caps','value' => 'Eater+Caps'),
	array('label' => 'Expletus Sans','value' => 'Expletus+Sans'),
	array('label' => 'Fanwood Text','value' => 'Fanwood+Text'),
	array('label' => 'Federant','value' => 'Federant'),
	array('label' => 'Federo','value' => 'Federo'),
	array('label' => 'Fjord One','value' => 'Fjord+One'),
	array('label' => 'Fondamento','value' => 'Fondamento'),
	array('label' => 'Fontdiner Swanky','value' => 'Fontdiner+Swanky'),
	array('label' => 'Forum','value' => 'Forum'),
	array('label' => 'Francois One','value' => 'Francois+One'),
	array('label' => 'Gentium Basic','value' => 'Gentium+Basic'),
	array('label' => 'Gentium Book Basic','value' => 'Gentium+Book+Basic'),
	array('label' => 'Geo','value' => 'Geo'),
	array('label' => 'Geostar Fill','value' => 'Geostar+Fill'),
	array('label' => 'Geostar','value' => 'Geostar'),
	array('label' => 'Give You Glory','value' => 'Give+You+Glory'),
	array('label' => 'Gloria Hallelujah','value' => 'Gloria+Hallelujah'),
	array('label' => 'Goblin One','value' => 'Goblin+One'),
	array('label' => 'Gochi Hand','value' => 'Gochi+Hand'),
	array('label' => 'Goudy Bookletter 1911','value' => 'Goudy+Bookletter+1911'),
	array('label' => 'Gravitas One','value' => 'Gravitas+One'),
	array('label' => 'Gruppo','value' => 'Gruppo'),
	array('label' => 'Hammersmith One','value' => 'Hammersmith+One'),
	array('label' => 'Herr Von Muellerhoff','value' => 'Herr+Von+Muellerhoff'),
	array('label' => 'Holtwood One SC','value' => 'Holtwood+One+SC'),
	array('label' => 'Homemade Apple','value' => 'Homemade+Apple'),
	array('label' => 'IM Fell DW Pica SC','value' => 'IM+Fell+DW+Pica+SC'),
	array('label' => 'IM Fell DW Pica','value' => 'IM+Fell+DW+Pica'),
	array('label' => 'IM Fell Double Pica SC','value' => 'IM+Fell+Double+Pica+SC'),
	array('label' => 'IM Fell Double Pica','value' => 'IM+Fell+Double+Pica'),
	array('label' => 'IM Fell English SC','value' => 'IM+Fell+English+SC'),
	array('label' => 'IM Fell English','value' => 'IM+Fell+English'),
	array('label' => 'IM Fell French Canon SC','value' => 'IM+Fell+French+Canon+SC'),
	array('label' => 'IM Fell French Canon','value' => 'IM+Fell+French+Canon'),
	array('label' => 'IM Fell Great Primer SC','value' => 'IM+Fell+Great+Primer+SC'),
	array('label' => 'IM Fell Great Primer','value' => 'IM+Fell+Great+Primer'),
	array('label' => 'Iceland','value' => 'Iceland'),
	array('label' => 'Inconsolata','value' => 'Inconsolata'),
	array('label' => 'Indie Flower','value' => 'Indie+Flower'),
	array('label' => 'Irish Grover','value' => 'Irish+Grover'),
	array('label' => 'Istok Web','value' => 'Istok+Web'),
	array('label' => 'Jockey One','value' => 'Jockey+One'),
	array('label' => 'Josefin Sans','value' => 'Josefin+Sans'),
	array('label' => 'Josefin Slab','value' => 'Josefin+Slab'),
	array('label' => 'Judson','value' => 'Judson'),
	array('label' => 'Julee','value' => 'Julee'),
	array('label' => 'Jura','value' => 'Jura'),
	array('label' => 'Just Another Hand','value' => 'Just+Another+Hand'),
	array('label' => 'Just Me Again Down Here','value' => 'Just+Me+Again+Down+Here'),
	array('label' => 'Kameron','value' => 'Kameron'),
	array('label' => 'Kelly Slab','value' => 'Kelly+Slab'),
	array('label' => 'Kenia','value' => 'Kenia'),
	array('label' => 'Knewave','value' => 'Knewave'),
	array('label' => 'Kranky','value' => 'Kranky'),
	array('label' => 'Kreon','value' => 'Kreon'),
	array('label' => 'Kristi','value' => 'Kristi'),
	array('label' => 'La Belle Aurore','value' => 'La+Belle+Aurore'),
	array('label' => 'Lancelot','value' => 'Lancelot'),
	array('label' => 'Lato','value' => 'Lato'),
	array('label' => 'League Script','value' => 'League+Script'),
	array('label' => 'Leckerli One','value' => 'Leckerli+One'),
	array('label' => 'Lekton','value' => 'Lekton'),
	array('label' => 'Lemon','value' => 'Lemon'),
	array('label' => 'Limelight','value' => 'Limelight'),
	array('label' => 'Linden Hill', 'value' => 'Linden+Hill'),
	array('label' => 'Lobster Two','value' => 'Lobster+Two'),
	array('label' => 'Lobster','value' => 'Lobster'),
	array('label' => 'Lora','value' => 'Lora'),
	array('label' => 'Love Ya Like A Sister','value' => 'Love+Ya+Like+A+Sister'),
	array('label' => 'Loved by the King','value' => 'Loved+by+the+King'),
	array('label' => 'Luckiest Guy','value' => 'Luckiest+Guy'),
	array('label' => 'Maiden Orange','value' => 'Maiden+Orange'),
	array('label' => 'Mako','value' => 'Mako'),
	array('label' => 'Marck Script','value' => 'Marck+Script'),
	array('label' => 'Marvel','value' => 'Marvel'),
	array('label' => 'Mate SC','value' => 'Mate+SC'),
	array('label' => 'Mate','value' => 'Mate'),
	array('label' => 'Maven Pro','value' => 'Maven+Pro'),
	array('label' => 'Meddon','value' => 'Meddon'),
	array('label' => 'MedievalSharp','value' => 'MedievalSharp'),
	array('label' => 'Megrim','value' => 'Megrim'),
	array('label' => 'Merienda One','value' => 'Merienda+One'),
	array('label' => 'Merriweather','value' => 'Merriweather'),
	array('label' => 'Metrophobic','value' => 'Metrophobic'),
	array('label' => 'Michroma','value' => 'Michroma'),
	array('label' => 'Miltonian Tattoo','value' => 'Miltonian+Tattoo'),
	array('label' => 'Miltonian','value' => 'Miltonian'),
	array('label' => 'Miss Fajardose','value' => 'Miss+Fajardose'),
	array('label' => 'Miss Saint Delafield','value' => 'Miss+Saint+Delafield'),
	array('label' => 'Modern Antiqua','value' => 'Modern+Antiqua'),
	array('label' => 'Molengo','value' => 'Molengo'),
	array('label' => 'Monofett','value' => 'Monofett'),
	array('label' => 'Monoton','value' => 'Monoton'),
	array('label' => 'Monsieur La Doulaise','value' => 'Monsieur+La+Doulaise'),
	array('label' => 'Montez','value' => 'Montez'),
	array('label' => 'Mountains of Christmas','value' => 'Mountains+of+Christmas'),
	array('label' => 'Mr Bedford','value' => 'Mr+Bedford'),
	array('label' => 'Mr Dafoe','value' => 'Mr+Dafoe'),
	array('label' => 'Mr De Haviland','value' => 'Mr+De+Haviland'),
	array('label' => 'Mrs Sheppards','value' => 'Mrs+Sheppards'),
	array('label' => 'Muli','value' => 'Muli'),
	array('label' => 'Neucha','value' => 'Neucha'),
	array('label' => 'Neuton','value' => 'Neuton'),
	array('label' => 'News Cycle','value' => 'News+Cycle'),
	array('label' => 'Niconne','value' => 'Niconne'),
	array('label' => 'Nixie One','value' => 'Nixie+One'),
	array('label' => 'Nobile','value' => 'Nobile'),
	array('label' => 'Nosifer Caps','value' => 'Nosifer+Caps'),
	array('label' => 'Nothing You Could Do','value' => 'Nothing+You+Could+Do'),
	array('label' => 'Nova Cut','value' => 'Nova+Cut'),
	array('label' => 'Nova Flat','value' => 'Nova+Flat'),
	array('label' => 'Nova Mono','value' => 'Nova+Mono'),
	array('label' => 'Nova Oval','value' => 'Nova+Oval'),
	array('label' => 'Nova Round','value' => 'Nova+Round'),
	array('label' => 'Nova Script','value' => 'Nova+Script'),
	array('label' => 'Nova Slim','value' => 'Nova+Slim'),
	array('label' => 'Nova Square','value' => 'Nova+Square'),
	array('label' => 'Numans','value' => 'Numans'),
	array('label' => 'Nunito','value' => 'Nunito'),
	array('label' => 'Old Standard TT','value' => 'Old+Standard+TT'),
	array('label' => 'Open Sans Condensed','value' => 'Open+Sans+Condensed'),
	array('label' => 'Open Sans','value' => 'Open+Sans'),
	array('label' => 'Orbitron','value' => 'Orbitron'),
	array('label' => 'Oswald','value' => 'Oswald'),
	array('label' => 'Over the Rainbow','value' => 'Over+the+Rainbow'),
	array('label' => 'Ovo','value' => 'Ovo'),
	array('label' => 'PT Sans Caption','value' => 'PT+Sans+Caption'),
	array('label' => 'PT Sans Narrow','value' => 'PT+Sans+Narrow'),
	array('label' => 'PT Sans','value' => 'PT+Sans'),
	array('label' => 'PT Serif Caption','value' => 'PT+Serif+Caption'),
	array('label' => 'PT Serif','value' => 'PT+Serif'),
	array('label' => 'Pacifico','value' => 'Pacifico'),
	array('label' => 'Passero One','value' => 'Passero+One'),
	array('label' => 'Patrick Hand','value' => 'Patrick+Hand'),
	array('label' => 'Paytone One','value' => 'Paytone+One'),
	array('label' => 'Permanent Marker','value' => 'Permanent+Marker'),
	array('label' => 'Petrona','value' => 'Petrona'),
	array('label' => 'Philosopher','value' => 'Philosopher'),
	array('label' => 'Piedra','value' => 'Piedra'),
	array('label' => 'Pinyon Script','value' => 'Pinyon+Script'),
	array('label' => 'Play','value' => 'Play'),
	array('label' => 'Playfair Display','value' => 'Playfair+Display'),
	array('label' => 'Podkova','value' => 'Podkova'),
	array('label' => 'Poller One','value' => 'Poller+One'),
	array('label' => 'Poly','value' => 'Poly'),
	array('label' => 'Pompiere','value' => 'Pompiere'),
	array('label' => 'Prata','value' => 'Prata'),
	array('label' => 'Prociono','value' => 'Prociono'),
	array('label' => 'Puritan','value' => 'Puritan'),
	array('label' => 'Quattrocento Sans','value' => 'Quattrocento+Sans'),
	array('label' => 'Quattrocento','value' => 'Quattrocento'),
	array('label' => 'Questrial','value' => 'Questrial'),
	array('label' => 'Quicksand','value' => 'Quicksand'),
	array('label' => 'Radley','value' => 'Radley'),
	array('label' => 'Raleway','value' => 'Raleway'),
	array('label' => 'Rammetto One','value' => 'Rammetto+One'),
	array('label' => 'Rancho','value' => 'Rancho'),
	array('label' => 'Rationale','value' => 'Rationale'),
	array('label' => 'Redressed','value' => 'Redressed'),
	array('label' => 'Reenie Beanie','value' => 'Reenie+Beanie'),
	array('label' => 'Ribeye Marrow','value' => 'Ribeye+Marrow'),
	array('label' => 'Ribeye','value' => 'Ribeye'),
	array('label' => 'Righteous','value' => 'Righteous'),
	array('label' => 'Rochester','value' => 'Rochester'),
	array('label' => 'Roboto','value' => 'Roboto'),
	array('label' => 'Rock Salt','value' => 'Rock+Salt'),
	array('label' => 'Rokkitt','value' => 'Rokkitt'),
	array('label' => 'Rosario','value' => 'Rosario'),
	array('label' => 'Ruslan Display','value' => 'Ruslan+Display'),
	array('label' => 'Salsa','value' => 'Salsa'),
	array('label' => 'Sancreek','value' => 'Sancreek'),
	array('label' => 'Sansita One','value' => 'Sansita+One'),
	array('label' => 'Satisfy','value' => 'Satisfy'),
	array('label' => 'Schoolbell','value' => 'Schoolbell'),
	array('label' => 'Shadows Into Light','value' => 'Shadows+Into+Light'),
	array('label' => 'Shanti','value' => 'Shanti'),
	array('label' => 'Short Stack','value' => 'Short+Stack'),
	array('label' => 'Sigmar One','value' => 'Sigmar+One'),
	array('label' => 'Signika Negative','value' => 'Signika+Negative'),
	array('label' => 'Signika','value' => 'Signika'),
	array('label' => 'Six Caps','value' => 'Six+Caps'),
	array('label' => 'Slackey','value' => 'Slackey'),
	array('label' => 'Smokum','value' => 'Smokum'),
	array('label' => 'Smythe','value' => 'Smythe'),
	array('label' => 'Sniglet','value' => 'Sniglet'),
	array('label' => 'Snippet','value' => 'Snippet'),
	array('label' => 'Sorts Mill Goudy','value' => 'Sorts+Mill+Goudy'),
	array('label' => 'Special Elite',/* */'value' => 'Special+Elite'),
	array('label' => 'Spinnaker','value' => 'Spinnaker'),
	array('label' => 'Spirax','value' => 'Spirax'),
	array('label' => 'Stardos Stencil',/* */'value' => 'Stardos+Stencil'),
	array('label' => 'Sue Ellen Francisco',/* */'value' => 'Sue+Ellen+Francisco'),
	array('label' => 'Sunshiney','value' => 'Sunshiney'),
	array('label' => 'Supermercado One','value' => 'Supermercado+One'),
	array('label' => 'Swanky and Moo Moo','value' => 'Swanky+and+Moo+Moo'),
	array('label' => 'Syncopate','value' => 'Syncopate'),
	array('label' => 'Tangerine','value' => 'Tangerine'),
	array('label' => 'Tenor Sans','value' => 'Tenor+Sans'),
	array('label' => 'Terminal Dosis','value' => 'Terminal+Dosis'),
	array('label' => 'The Girl Next Door','value' => 'The+Girl+Next+Door'),
	array('label' => 'Tienne','value' => 'Tienne'),
	array('label' => 'Titillium Web','value' => 'Titillium+Web'),
	array('label' => 'Tinos','value' => 'Tinos'),
	array('label' => 'Tulpen One','value' => 'Tulpen+One'),
	array('label' => 'Ubuntu Condensed','value' => 'Ubuntu+Condensed'),
	array('label' => 'Ubuntu Mono','value' => 'Ubuntu+Mono'),
	array('label' => 'Ubuntu','value' => 'Ubuntu'),
	array('label' => 'Ultra','value' => 'Ultra'),
	array('label' => 'UnifrakturCook','value' => 'UnifrakturCook'),
	array('label' => 'UnifrakturMaguntia','value' => 'UnifrakturMaguntia'),
	array('label' => 'Unkempt','value' => 'Unkempt'),
	array('label' => 'Unlock','value' => 'Unlock'),
	array('label' => 'Unna','value' => 'Unna'),
	array('label' => 'VT323','value' => 'VT323'),
	array('label' => 'Varela Round','value' => 'Varela+Round'),
	array('label' => 'Varela','value' => 'Varela'),
	array('label' => 'Vast Shadow','value' => 'Vast+Shadow'),
	array('label' => 'Vibur','value' => 'Vibur'),
	array('label' => 'Vidaloka','value' => 'Vidaloka'),
	array('label' => 'Volkhov','value' => 'Volkhov'),
	array('label' => 'Vollkorn','value' => 'Vollkorn'),
	array('label' => 'Voltaire','value' => 'Voltaire'),
	array('label' => 'Waiting for the Sunrise','value' => 'Waiting+for+the+Sunrise'),
	array('label' => 'Wallpoet','value' => 'Wallpoet'),
	array('label' => 'Walter Turncoat','value' => 'Walter+Turncoat'),
	array('label' => 'Wire One','value' => 'Wire+One'),
	array('label' => 'Yanone Kaffeesatz','value' => 'Yanone+Kaffeesatz'),
	array('label' => 'Yellowtail','value' => 'Yellowtail'),
	array('label' => 'Yeseva One','value' => 'Yeseva+One'),
	array('label' => 'Zeyada','value' => 'Zeyada')
);

/**
 * Initialize the custom theme options.
 */
add_action( 'admin_init', 'custom_theme_options' );

/**
 * Build the custom settings & update OptionTree.
 */
function custom_theme_options() {
		
		global $google_fonts;

	/* OptionTree is not loaded yet */
	if ( ! function_exists( 'ot_settings_id' ) )
		return false;
		
	/**
	 * Get a copy of the saved settings array. 
	 */
	$saved_settings = get_option( ot_settings_id(), array() );
	
	/**
	 * Custom settings array that will eventually be 
	 * passes to the OptionTree Settings API Class.
	 */
	$custom_settings = array( 
		'contextual_help' => array( 
			'sidebar'       => 'test'
		),
		'sections'        => array( 
			array(
				'id'          => 'general',
				'title'       => __('General', 'faculty')
			),
			array(
				'id'          => 'social_icons',
				'title'       => __('Social icons', 'faculty')
			),
			array(
				'id'          => 'fa_colors',
				'title'       => __('Theme Colors', 'faculty')
			),
			array(
				'id'          => 'typography',
				'title'       => __('Typography', 'faculty')
			),
			array(
				'id'          => 'blog',
				'title'       => __('Blog', 'faculty')
			),
			array(
				'id'          => 'publications',
				'title'       => __('Publications', 'faculty')
			),
			array(
				'id'          => 'sidebars',
				'title'       => __('Sidebars', 'faculty')
			),
			array(
				'id'          => 'etc',
				'title'       => __('Miscellaneous', 'faculty')
			),
			array(
				'id'          => 'custom_css',
				'title'       => __('Custom CSS', 'faculty')
			),
		),
		'settings'        => array( 

			array(
					'id'          => 'sidebars_text',
					'label'       => __('About sidebars','faculty'),
					'desc'        => __('Create any sidebar then go to Appearance > Widgets and add widgets to them, and then you can choose them for specific pages or posts using visual composer', 'faculty'),            'std'         => '',
					'type'        => 'textblock',
					'section'     => 'sidebars',
					'rows'        => '',
					'post_type'   => '',
					'taxonomy'    => '',
					'class'       => ''
			),
			array(
					'label'       => __('Create Sidebars', 'faculty'),
					'id'          => 'incr_sidebars',
					'type'        => 'list-item',
					'desc'        => __('Choose a unique title for each sidebar', 'faculty'),
					'section'     => 'sidebars',
					'settings'    => array(
							array(
								'label'       => 'ID',
								'id'          => 'id',
								'type'        => 'text',
								'desc'        => __('Write a lowercase single world as ID (or number), without any spaces', 'faculty'),
								'std'         => '',
								'rows'        => '',
								'post_type'   => '',
								'taxonomy'    => '',
								'class'       => ''
							)
					)
			),
			array(
				'id'          => 'person_name',
				'label'       => __('Your Name','faculty'),
				'desc'        => __('Type in your complete name here','faculty'),
				'std'         => '',
				'type'        => 'text',
				'section'     => 'general',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'sub_title',
				'label'       => __('Sub-title','faculty'),
				'desc'        => __('A sub text just below your name, can be your university name, etc','faculty'),
				'std'         => '',
				'type'        => 'text',
				'section'     => 'general',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'personal_photo',
				'label'       => __('Personal photo','faculty'),
				'desc'        => __('Upload your personal photo here. It will be shown at the top of the sidebar.','faculty'),
				'std'         => '',
				'type'        => 'upload',
				'section'     => 'general',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'si_facebook',
				'label'       => __('Facebook','faculty'),
				'desc'        => '',
				'std'         => 'off',
				'type'        => 'on-off',
				'section'     => 'social_icons',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'si_facebook_url',
				'label'       => __('Facebook url','faculty'),
				'desc'        => '',
				'std'         => '',
				'type'        => 'text',
				'section'     => 'social_icons',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => 'si_facebook:is(on)',
				'operator'    => 'and'
			),
			array(
				'id'          => 'si_twitter',
				'label'       => __('Twitter','faculty'),
				'desc'        => '',
				'std'         => 'off',
				'type'        => 'on-off',
				'section'     => 'social_icons',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'si_twitter_url',
				'label'       => __('Twitter URL','faculty'),
				'desc'        => '',
				'std'         => '',
				'type'        => 'text',
				'section'     => 'social_icons',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => 'si_twitter:is(on)',
				'operator'    => 'and'
			),
			array(
				'id'          => 'si_linkedin',
				'label'       => __('LinedIn','faculty'),
				'desc'        => '',
				'std'         => 'off',
				'type'        => 'on-off',
				'section'     => 'social_icons',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'si_linkedin_url',
				'label'       => __('LinkedIn URL','faculty'),
				'desc'        => '',
				'std'         => '',
				'type'        => 'text',
				'section'     => 'social_icons',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => 'si_linkedin:is(on)',
				'operator'    => 'and'
			),
			array(
				'id'          => 'si_academia',
				'label'       => __('Academia.edu','faculty'),
				'desc'        => '',
				'std'         => 'off',
				'type'        => 'on-off',
				'section'     => 'social_icons',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'si_academia_url',
				'label'       => __('Academia.edu URL','faculty'),
				'desc'        => '',
				'std'         => '',
				'type'        => 'text',
				'section'     => 'social_icons',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => 'si_academia:is(on)',
				'operator'    => 'and'
			),
			array(
				'id'          => 'si_rg',
				'label'       => __('Researchgate Profile','faculty'),
				'desc'        => '',
				'std'         => 'off',
				'type'        => 'on-off',
				'section'     => 'social_icons',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'si_rg_url',
				'label'       => __('Researchgate URL','faculty'),
				'desc'        => '',
				'std'         => '',
				'type'        => 'text',
				'section'     => 'social_icons',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => 'si_rg:is(on)',
				'operator'    => 'and'
			),
			array(
				'id'          => 'si_email',
				'label'       => __('Email','faculty'),
				'desc'        => '',
				'std'         => 'off',
				'type'        => 'on-off',
				'section'     => 'social_icons',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'si_email_address',
				'label'       => __('Email address','faculty'),
				'desc'        => '',
				'std'         => '',
				'type'        => 'text',
				'section'     => 'social_icons',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => 'si_email:is(on)',
				'operator'    => 'and'
			),
			array(
				'id'          => 'si_gplus',
				'label'       => __('Google+','faculty'),
				'desc'        => '',
				'std'         => 'off',
				'type'        => 'on-off',
				'section'     => 'social_icons',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'si_google_scholar',
				'label'       => __('Google Scholar','faculty'),
				'desc'        => '',
				'std'         => 'off',
				'type'        => 'on-off',
				'section'     => 'social_icons',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'si_google_scholar_url',
				'label'       => __('URL','faculty'),
				'desc'        => '',
				'std'         => '',
				'type'        => 'text',
				'section'     => 'social_icons',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => 'si_google_scholar:is(on)',
				'operator'    => 'and'
			),
			array(
				'id'          => 'si_gplus_url',
				'label'       => __('URL','faculty'),
				'desc'        => '',
				'std'         => '',
				'type'        => 'text',
				'section'     => 'social_icons',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => 'si_gplus:is(on)',
				'operator'    => 'and'
			),
			array(
				'id'          => 'si_youtube',
				'label'       => __('YouTube','faculty'),
				'desc'        => '',
				'std'         => 'off',
				'type'        => 'on-off',
				'section'     => 'social_icons',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'si_youtube_url',
				'label'       => __('URL','faculty'),
				'desc'        => '',
				'std'         => '',
				'type'        => 'text',
				'section'     => 'social_icons',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => 'si_youtube:is(on)',
				'operator'    => 'and'
			),
			array(
				'id'          => 'si_instagram',
				'label'       => __('Instagram','faculty'),
				'desc'        => '',
				'std'         => 'off',
				'type'        => 'on-off',
				'section'     => 'social_icons',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'si_instagram_url',
				'label'       => __('URL','faculty'),
				'desc'        => '',
				'std'         => '',
				'type'        => 'text',
				'section'     => 'social_icons',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => 'si_instagram:is(on)',
				'operator'    => 'and'
			),
			array(
				'id'          => 'si_flickr',
				'label'       => __('Flickr','faculty'),
				'desc'        => '',
				'std'         => 'off',
				'type'        => 'on-off',
				'section'     => 'social_icons',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'si_flickr_url',
				'label'       => __('URL','faculty'),
				'desc'        => '',
				'std'         => '',
				'type'        => 'text',
				'section'     => 'social_icons',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => 'si_flickr:is(on)',
				'operator'    => 'and'
			),
			array(
				'id'          => 'si_pinterest',
				'label'       => __('Pinterest','faculty'),
				'desc'        => '',
				'std'         => 'off',
				'type'        => 'on-off',
				'section'     => 'social_icons',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'si_pinterest_url',
				'label'       => __('URL','faculty'),
				'desc'        => '',
				'std'         => '',
				'type'        => 'text',
				'section'     => 'social_icons',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => 'si_pinterest:is(on)',
				'operator'    => 'and'
			),
			array(
				'id'          => 'si_rss',
				'label'       => __('RSS','faculty'),
				'desc'        => '',
				'std'         => 'off',
				'type'        => 'on-off',
				'section'     => 'social_icons',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'si_rss_url',
				'label'       => __('URL','faculty'),
				'desc'        => '',
				'std'         => '',
				'type'        => 'text',
				'section'     => 'social_icons',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => 'si_rss:is(on)',
				'operator'    => 'and'
			),
			array(
				'id'          => 'si_github',
				'label'       => __('Github','faculty'),
				'desc'        => '',
				'std'         => 'off',
				'type'        => 'on-off',
				'section'     => 'social_icons',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'si_github_url',
				'label'       => __('URL','faculty'),
				'desc'        => '',
				'std'         => '',
				'type'        => 'text',
				'section'     => 'social_icons',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => 'si_github:is(on)',
				'operator'    => 'and'
			),
			

			array(
				'id'          => 'c_main_color',
				'label'       => __('Main color','faculty'),
				'desc'        => '',
				'std'         => '#03cc85',
				'type'        => 'colorpicker',
				'section'     => 'fa_colors',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'c_darker_color',
				'label'       => __('Darker Color','faculty'),
				'desc'        => '',
				'std'         => '#03bb7a',
				'type'        => 'colorpicker',
				'section'     => 'fa_colors',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'c_link_color',
				'label'       => __('Links Color','faculty'),
				'desc'        => '',
				'std'         => '#428bca',
				'type'        => 'colorpicker',
				'section'     => 'fa_colors',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'c_link_hover_color',
				'label'       => __('Links Hover Color','faculty'),
				'desc'        => '',
				'std'         => '#2a6496',
				'type'        => 'colorpicker',
				'section'     => 'fa_colors',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'c_head_row',
				'label'       => __('Header row background color','faculty'),
				'desc'        => '',
				'std'         => '#f3f3f3',
				'type'        => 'colorpicker',
				'section'     => 'fa_colors',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'c_odd',
				'label'       => __('Odd rows color','faculty'),
				'desc'        => __('Color of first, third, etc rows at your pages.','faculty'),
				'std'         => '#f7f7f7',
				'type'        => 'colorpicker',
				'section'     => 'fa_colors',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'c_even',
				'label'       => __('Even rows color','faculty'),
				'desc'        => __('background color of second, fourth, etc rows at pages','faculty'),
				'std'         => '#fcfcfc',
				'type'        => 'colorpicker',
				'section'     => 'fa_colors',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'c_side_back',
				'label'       => __('Sidebar background color','faculty'),
				'desc'        => __('default: #2b2b2b','faculty'),
				'std'         => '#2b2b2b',
				'type'        => 'colorpicker',
				'section'     => 'fa_colors',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'c_side_footer_back',
				'label'       => __('Sidebar footer background color','faculty'),
				'desc'        => __('default: #202020','faculty'),
				'std'         => '#202020',
				'type'        => 'colorpicker',
				'section'     => 'fa_colors',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'c_menu_item_bg',
				'label'       => __('Menu item background color','faculty'),
				'desc'        => '',
				'std'         => '#303030',
				'type'        => 'colorpicker',
				'section'     => 'fa_colors',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'menuhover',
				'label'       => __('menu hover','faculty'),
				'desc'        => '',
				'std'         => '#363636',
				'type'        => 'colorpicker',
				'section'     => 'fa_colors',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'c_menu_item_bt',
				'label'       => __('Menu item border-top color','faculty'),
				'desc'        => '',
				'std'         => '#373737',
				'type'        => 'colorpicker',
				'section'     => 'fa_colors',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'c_menu_item_bb',
				'label'       => __('Menu item border-bottom color','faculty'),
				'desc'        => '',
				'std'         => '#2B2B2B',
				'type'        => 'colorpicker',
				'section'     => 'fa_colors',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'c_gal_head',
				'label'       => __('Gallery Header color','faculty'),
				'desc'        => '',
				'std'         => '#2c2c2d',
				'type'        => 'colorpicker',
				'section'     => 'fa_colors',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'c_gal_body',
				'label'       => __('Gallery body color','faculty'),
				'desc'        => '',
				'std'         => '#303030',
				'type'        => 'colorpicker',
				'section'     => 'fa_colors',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'c_box_bg',
				'label'       => __('Boxed elements background color','faculty'),
				'desc'        => __('background color for boxed elements, for example educations, research interests, projects, comments, etc.','faculty'),
				'std'         => '#f5f5f5',
				'type'        => 'colorpicker',
				'section'     => 'fa_colors',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'c_box_bg_alt',
				'label'       => __('Boxed elements alternative background color','faculty'),
				'desc'        => __('some boxed elements need to be slightly darker or lighter...','faculty'),
				'std'         => '#fff',
				'type'        => 'colorpicker',
				'section'     => 'fa_colors',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'c_blog_hs',
				'label'       => __('Blog hide show icon color','faculty'),
				'desc'        => __('Color for the little arrow to show and hide the list of posts at blog. Use high contrast against the blog list header background.','faculty'),
				'std'         => '#FFED52',
				'type'        => 'colorpicker',
				'section'     => 'fa_colors',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'c_blog_list_head',
				'label'       => __('Blog list header color','faculty'),
				'desc'        => '',
				'std'         => '#2b2b2b',
				'type'        => 'colorpicker',
				'section'     => 'fa_colors',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'c_blog_list_head_text',
				'label'       => __('Blog list header text color','faculty'),
				'desc'        => __('The text color of the blog sidebar header','faculty'),
				'std'         => '',
				'type'        => 'colorpicker',
				'section'     => 'fa_colors',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'c_headings_color',
				'label'       => __('Title color','faculty'),
				'desc'        => __('default:#333333 / This will affect the titles with class of "fac-title" and the big title of pages and also the title of the blog posts. all other headings will not be affected.','faculty'),
				'std'         => '#333333',
				'type'        => 'colorpicker',
				'section'     => 'fa_colors',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 't_sidebar_title',
				'label'       => __('Sidebar title size','faculty'),
				'desc'        => __('default is 28','faculty'),
				'std'         => '28',
				'type'        => 'numeric-slider',
				'section'     => 'typography',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 't_menu',
				'label'       => __('Menu text size','faculty'),
				'desc'        => __('default is 14','faculty'),
				'std'         => '14',
				'type'        => 'numeric-slider',
				'section'     => 'typography',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 't_global',
				'label'       => __('Global font size','faculty'),
				'desc'        => __('default is 16','faculty'),
				'std'         => '16',
				'type'        => 'numeric-slider',
				'section'     => 'typography',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 't_big_title',
				'label'       => __('Big title size','faculty'),
				'desc'        => __('default is 50','faculty'),
				'std'         => '50',
				'type'        => 'numeric-slider',
				'section'     => 'typography',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 't_blog_title_size',
				'label'       => __('Blog title size','faculty'),
				'desc'        => __('default is 50','faculty'),
				'std'         => '50',
				'type'        => 'numeric-slider',
				'section'     => 'typography',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'label'       => __('Body font','faculty'),
				'id'          => 'faculty_body_font',
				'desc'        => __('Choose font for body ( Default is Lato).','faculty'),
				'std'         => '',
				'type'        => 'select',
				'section'     => 'typography',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'class'       => '',
				'choices'     => $google_fonts
				),
				array(
				'label'       => __('Headings Font','faculty'),
				'id'          => 'faculty_headings_font',
				'desc'        => __('Choose font for body ( Default is Lato).','faculty'),
				'std'         => '',
				'type'        => 'select',
				'section'     => 'typography',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'class'       => '',
				'choices'     => $google_fonts
				),
			array(
				'id'          => 'blog_ajax',
				'label'       => __('Use Ajax for blog pages?','faculty'),
				'desc'        => __('When this is on, you can click on list of posts at the sidebar and it will loads the content into the page, if you want to disable this turn it off, then when you click it will load the entire page.<br/> This is usefull when you want to use third party plugins which will add scripts to page that the theme cant handle them. <br/> And dont worry about the SEO it will work fine with search engines while using ajax ON.','faculty'),
				'std'         => 'off',
				'type'        => 'on-off',
				'section'     => 'blog',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'blog_twitter',
				'label'       => __('Show Post twitter share','faculty'),
				'desc'        => '',
				'std'         => 'off',
				'type'        => 'on-off',
				'section'     => 'blog',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'blog_gp',
				'label'       => __('Show Post Google plus','faculty'),
				'desc'        => '',
				'std'         => 'off',
				'type'        => 'on-off',
				'section'     => 'blog',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'blog_fb',
				'label'       => __('Blog facebook','faculty'),
				'desc'        => '',
				'std'         => 'off',
				'type'        => 'on-off',
				'section'     => 'blog',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'blog_author',
				'label'       => __('Show post author','faculty'),
				'desc'        => '',
				'std'         => 'on',
				'type'        => 'on-off',
				'section'     => 'blog',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'blog_tags',
				'label'       => __('Show post tags','faculty'),
				'desc'        => '',
				'std'         => '',
				'type'        => 'on-off',
				'section'     => 'blog',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'blog_thumbs',
				'label'       => __('Show thumbs at blog list','faculty'),
				'desc'        => '',
				'std'         => '',
				'type'        => 'on-off',
				'section'     => 'blog',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			
			array(
				'id'          => 'pub_layout',
				'label'       => __('Publication items layout','faculty'),
				'desc'        => '',
				'std'         => 'default',
				'type'        => 'radio',
				'section'     => 'publications',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and',
				'choices'     => array( 
					array(
						'value'       => 'default',
						'label'       => __('Default','faculty'),
						'src'         => '',
					),
					array(
						'value'       => 'compact',
						'label'       => __('compact','faculty'),
						'src'         => '',
					)
				)
			),

			array(
				'id'          => 'pubs_single_link',
				'label'       => __('Link to Details Page?','faculty'),
				'desc'        => __('If you need to have a sophisticated details page for each of your publications, turn this <code>on</code>.<br>While this is set to on, items won\'t toggle.','faculty'),
				'std'         => 'on',
				'type'        => 'on-off',
				'section'     => 'publications',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),

			array(
				'id'          => 'override_order',
				'label'       => __('Order publications by year?','faculty'),
				'desc'        => __('Letting this to be on will ignore your ordering and will re order your publication list by year.','faculty'),
				'std'         => 'off',
				'type'        => 'on-off',
				'section'     => 'publications',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'pub_order',
				'label'       => __('Publication list order','faculty'),
				'desc'        => '',
				'std'         => 'asc',
				'type'        => 'radio',
				'section'     => 'publications',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => 'override_order:is(on)',
				'operator'    => 'and',
				'choices'     => array( 
					array(
						'value'       => 'ASC',
						'label'       => __('Ascending','faculty'),
						'src'         => ''
					),
					array(
						'value'       => 'DESC',
						'label'       => __('Descending','faculty'),
						'src'         => ''
					)
				)
			),
			array(
				'id'          => 'show_pub_filter',
				'label'       => __('Show Publication filters','faculty'),
				'desc'        => '',
				'std'         => 'on',
				'type'        => 'on-off',
				'section'     => 'publications',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'pub_filter',
				'label'       => __('Publication filter layout','faculty'),
				'desc'        => '',
				'std'         => 'dropdown',
				'type'        => 'radio',
				'section'     => 'publications',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => 'show_pub_filter:is(on)',
				'operator'    => 'and',
				'choices'     => array( 
					array(
						'value'       => 'dropdown',
						'label'       => __('DropDown','faculty'),
						'src'         => ''
					),
					array(
						'value'       => 'inline',
						'label'       => __('Inline badges','faculty'),
						'src'         => ''
					)
				)
			),
			array(
				'id'          => 'fac_paginate_pubs',
				'label'       => __('Pagination','faculty'),
				'desc'        => __('Show pagination links instead of loading all publications at once. ','faculty'),
				'std'         => 'on',
				'type'        => 'on-off',
				'section'     => 'publications',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'fac_paginate_pubs_notice',
				'label'       => __('Pagination','faculty'),
				'desc'        => __('<code>Notice:</code> You should remove any <code>ajax-fac</code> classnames from menu items that hold for your publications page. If you ignore this notice you will cause issues for your user\'s experiences.','faculty'),
				'std'         => 'off',
				'type'        => 'textblock',
				'section'     => 'publications',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => 'fac_paginate_pubs:is(on)',
				'operator'    => 'and'
			),
			array(
				'id'          => 'fac_paginate_pubs_per_page',
				'label'       => __('Items per page','faculty'),
				'desc'        => __('How many items to display at each page?','faculty'),
				'std'         => '30',
				'type'        => 'numeric-slider',
				'section'     => 'publications',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '10,80,5',
				'class'       => '',
				'condition'   => 'fac_paginate_pubs:is(on)',
				'operator'    => 'and'
			),
			array(
				'id'          => 'pub_filter_preset',
				'label'       => __('Preset filtering on:','faculty'),
				'desc'        => __('After adding some "publications types" type the slug of the type which you want to be used as active filter, leave this blank to ignore it.','faculty'),
				'std'         => '',
				'type'        => 'text',
				'section'     => 'publications',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => 'fac_paginate_pubs:is(off)',
				'operator'    => 'and'
			),

			array(
				'id'          => 'fac_pub_header_bg',
				'label'       => __('Header Background Image','faculty'),
				'desc'        => __('Background Image at the header of publication pages including the archive page and individual publications. Choose an image with approximate size of 1000px in width.','faculty'),
				'std'         => '',
				'type'        => 'upload',
				'section'     => 'publications',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),

			array(
				'id'          => 'etc_analytics_code',
				'label'       => __('Analytics script','faculty'),
				'desc'        => __('Paste your Google analytics ( or other services ) code here','faculty'),
				'std'         => '',
				'type'        => 'textarea-simple',
				'section'     => 'etc',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'etc_fav_icon',
				'label'       => __('Site favicon','faculty'),
				'desc'        => __('Upload a 16x16 or 32x32 .png or .ico file','faculty'),
				'std'         => '',
				'type'        => 'upload',
				'section'     => 'etc',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'copyright',
				'label'       => __('Copyright text','faculty'),
				'desc'        => '',
				'std'         => 'Copyright text here',
				'type'        => 'text',
				'section'     => 'etc',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'no_perfect_scroll',
				'label'       => __('Use fancy scrollbars?','faculty'),
				'desc'        => '',
				'std'         => 'off',
				'type'        => 'on-off',
				'section'     => 'etc',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'circle_around_logo',
				'label'       => __('Circled profile picture?','faculty'),
				'desc'        => __('default is on which means it will wrap your image with a circle.','faculty'),
				'std'         => 'on',
				'type'        => 'on-off',
				'section'     => 'etc',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'side_footer',
				'label'       => __('Show Sidebar Footer?','faculty'),
				'desc'        => '',
				'std'         => 'on',
				'type'        => 'on-off',
				'section'     => 'etc',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
			array(
				'id'          => 'fac_side_bg',
				'label'       => __('Sidebar Background Image','faculty'),
				'desc'        => __('Adds a background image for the site sidebar, leave empty to ignore.','faculty'),
				'std'         => '',
				'type'        => 'upload',
				'section'     => 'etc',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),

			array(
				'id'          => 'fac_custom_css',
				'label'       => __( 'Custom CSS', 'faculty' ),
				'desc'        => '',
				'std'         => '',
				'type'        => 'css',
				'section'     => 'custom_css',
				'rows'        => '',
				'post_type'   => '',
				'taxonomy'    => '',
				'min_max_step'=> '',
				'class'       => '',
				'condition'   => '',
				'operator'    => 'and'
			),
		)
	);
	
	/* allow settings to be filtered before saving */
	$custom_settings = apply_filters( ot_settings_id() . '_args', $custom_settings );
	
	/* settings are not the same update the DB */
	if ( $saved_settings !== $custom_settings ) {
		update_option( ot_settings_id(), $custom_settings ); 
	}
	
	/* Lets OptionTree know the UI Builder is being overridden */
	global $ot_has_custom_theme_options;
	$ot_has_custom_theme_options = true;
	
}